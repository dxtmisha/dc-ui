@import "../../styles/color";
@import "../../styles/flex";
@import "../../styles/font";
@import "../../styles/media";
@import "../../styles/position";
@import "../../styles/options/optionShape";
@import "styleExtend";
@import "styleVar";

@mixin listItem() {
  @include listItemVar;
  @include font('subtitle1');
  @include select-none;
  @extend %flex-x;
  --rp-palette: var(--_li-image-palette);
  background-color: varColor(--_li-background, --_li-background-opacity);
  background-image: none;
  cursor: default;
  margin: calc(var(--_li-margin) / 2) var(--_li-margin);
  min-height: calc(var(--_li-height) - var(--_li-margin));
  overflow: hidden;
  padding: 0 var(--_li-padding);
  position: relative;
}

@mixin listItemThumbnail() {
  &__thumbnail {
    margin-left: var(--_bt-squeeze);
    @content;
  }

  &__thumbnail ~ &__text {
    margin-left: var(--_li-padding);
  }
}

@mixin listItemIcon() {
  &__icon {
    @content;
  }

  &__icon ~ &__text {
    margin-left: var(--_li__ic-padding);
  }
}

@mixin listItemTrailing() {
  &__trailing {
    display: var(--_li--ic-display, block);
    margin-left: var(--_li-padding);
    order: 2;
    @content;
  }

  &.value-trailing {
    --_li__trailing-width: calc(24px + var(--_li-padding));
  }
}

@mixin listItemText() {
  &__text {
    @extend %flex-dynamic;
    align-content: center;
    align-items: center;
    align-self: stretch;
    display: var(--_li--ic-display, flex);
    flex-wrap: wrap;
    padding: var(--_li-padding-y) 0;
    position: relative;
    @content;
  }

  &__title {
    @extend %flex-x;
    gap: var(--_li__st-gap);
    flex-basis: 100%;
  }

  &__main {
    @extend %flex-dynamic;
  }
}

@mixin listItemTextShort() {
  &__text-short {
    @include ellipsis;
    display: var(--_li--ic-display, var(--_li--sh-display, none));
    @content;
  }
}

@mixin listItemSubText() {
  &__prefix,
  &__suffix {
    white-space: nowrap;
  }

  &:not(.status-disabled) & {
    &__prefix,
    &__suffix,
    &__description {
      --basic-text-opacity: var(--opacity-surface-medium);
    }
  }
}

@mixin listItemDescription() {
  &__description {
    @include clamp(2);
    @include font('body2');
    flex-basis: 100%;
    overflow: hidden;
    @content;
  }
}

@mixin listItemAdaptive() {
  @include mediaMaxList {
    @include mixinAdaptive;
    @content;
  }

  &.adaptive-icon {
    @include mixinAdaptive;
    @content;
  }

  &.adaptive-block {
    width: 100%;
  }
}

@mixin listItemSize() {
  &.size- {
    &dynamic {
      --_li-height: auto;
      --_li__ic-padding: var(--_li-padding);
    }

    &compact {
      --_li-height: var(--_li--cm-height);
    }

    &medium {
      --_li-height: var(--_li--md-height);
    }

    &large,
    &rectangle {
      --_li-height: var(--_li--lg-height);
    }
  }

  &.size-rectangle &__thumbnail {
    margin-left: calc(var(--_li-padding) * -1);
  }
}

@mixin listItemShape() {
  @include optionShape;

  &.shape-basic,
  &.shape-rounded,
  &.shape-pill {
    --_li-margin: var(--_li--sh-margin);
    @content;
  }

  &.shape-pill &__thumbnail {
    --ic-size: calc(var(--_li-height) - (var(--_li-padding-y) * 2) - var(--_li-margin));
    --ic--md-size: var(--ic-size);
    --ic--lg-size: var(--ic-size);
    --ic--lg-radius: var(--radius-pill);
    --_bt-squeeze: calc(var(--_li-padding-y) - var(--_li-padding));
  }
}

@mixin listItemBorder() {
  & + &.option-border &__text {
    @include afterAbsolute('top') {
      border-top-width: 1px;
      right: calc((var(--_li-padding) + var(--_li__trailing-width, 0px)) * -1);
      @content;
    }
  }
}

@mixin listItemStatus() {
  &:not(.status-disabled) {
    &:hover,
    &.status-hover {
      background-image: varColor(--_li-image-palette, --opacity-container-hover, true);
    }

    &:active,
    &.status-active {
      background-image: varColor(--_li-image-palette, --opacity-container-dragged, true);
    }

    &:focus,
    &.status-focus {
      background-image: varColor(--_li-image-palette, --opacity-container-focus, true);
    }

    &.status-selected {
      --basic-text: var(--_li-select-palette);
      --_li-palette: var(--_li-select-palette);
      --_li-background-opacity: var(--opacity-container-selected);
    }
  }
}

@mixin listItemDisabled() {
  &.status-disabled {
    --basic-text: var(--disabled-type1);
    --basic-text-opacity: var(--opacity-surface-disabled);
    --_li-palette: var(--disabled-type1);
    @content;
  }
}

@mixin listItemInit() {
  @include listItem;
  @include listItemThumbnail;
  @include listItemIcon;
  @include listItemTrailing;
  @include listItemText;
  @include listItemTextShort;
  @include listItemSubText;
  @include listItemDescription;
  @include listItemAdaptive;
  @include listItemSize;
  @include listItemShape;
  @include listItemBorder;
  @include listItemStatus;
  @include listItemDisabled;
}
