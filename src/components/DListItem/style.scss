@import "../../styles/color";
@import "../../styles/flex";
@import "../../styles/font";
@import "../../styles/media";
@import "../../styles/position";
@import "../../styles/options/optionShape";
@import "styleExtend";
@import "styleVar";

@mixin listItem() {
  @include listItemVar;
  @include font('subtitle1');
  @include select-none;
  @extend %flex-x;

  --bg-shift: var(--_li-padding-y);
  --ic-palette: var(--basic-text);
  --rp-palette: var(--_li-image);

  --_li-background: var(--_li-palette-type1);
  --_li-background-opacity: 0;
  --_li--hv-background-opacity: 0;
  --_li--sl-background-opacity: var(--opacity-container-selected);
  --_li-margin-gap: calc(var(--_li-margin) / 2);

  --_li-image: var(--_li-palette-image);
  --_li--sl-image: var(--_li-palette-image);

  --_li--sl-text: var(--_li-palette-select);

  background-color: varColor(--_li-background, --_li-background-opacity);
  background-image: none;
  cursor: default;
  margin: 0 var(--_li-margin) var(--_li-margin-gap);
  min-height: calc(var(--_li-height) - var(--_li-margin-gap));
  padding: 0 var(--_li-padding);
  position: relative;

  &:first-child {
    margin-top: var(--_li-margin-gap);
  }

  @include mediaMinWidth() {
    &:not(.option-dense) {
      --_li-padding: var(--_li--ds-padding);
    }
  }
}

@mixin listItemIcon() {
  &__icon.li-thumbnail {
    margin-left: var(--_bt-squeeze);
  }

  &__icon.li-trailing {
    @extend %icon-margin-left;
    display: var(--_li--ic-display, var(--_li--sh__text-display, block));
    order: 2;
    @content;
  }

  &__icon.li-icon ~ &__text {
    margin-left: var(--_li__ic-padding);
  }

  &__icon.li-thumbnail ~ &__text {
    @extend %icon-margin-left;
  }

  &.value-trailing {
    --_li__trailing-width: calc(24px + var(--_li-padding));
  }
}

@mixin listItemText() {
  &__text {
    @extend %flex-dynamic;
    align-content: center;
    align-items: center;
    align-self: stretch;
    display: var(--_li--ic-display, flex);
    flex-wrap: wrap;
    padding: var(--_li-padding-y) 0;
    position: relative;
    @content;
  }

  &__title {
    @extend %flex-x;
    gap: var(--_li__st-gap);
    flex-basis: 100%;
  }

  &__main {
    @extend %flex-dynamic;
  }
}

@mixin listItemTextShort() {
  &__text-short {
    @include ellipsis;
    display: var(--_li--ic-display, var(--_li--sh-display, none));
    @content;
  }
}

@mixin listItemUnderline() {
  &__underline {
    background-color: varColor(--warning-type1, --opacity-scrim);
  }
}

@mixin listItemSubText() {
  &__prefix,
  &__suffix {
    white-space: nowrap;
  }

  &:not(.status-disabled) & {
    &__prefix,
    &__suffix,
    &__description {
      --basic-text-opacity: var(--opacity-surface-medium);
    }
  }

  &__prefix,
  &__suffix,
  &__description {
    display: var(--_li--sh__text-display, block);
  }
}

@mixin listItemDescription() {
  &__description {
    @include clamp(2);
    @include font('body2');
    flex-basis: 100%;
    overflow: hidden;
    @content;
  }
}

@mixin listItemColor() {
  &.appearance-color {
    @extend %palette-color;
    @extend %text-color;
    @content;
  }
}

@mixin listItemContained() {
  &.appearance-contained {
    @extend %palette-color;
    @extend %background-filled;
    @extend %background-filled-selected;
    @content;
  }
}

@mixin listItemContainedStatus() {
  &.appearance-contained-status {
    @extend %palette-color;
    @extend %text-color;
    @extend %background-filled-selected;
    @content;
  }
}

@mixin listItemSize() {
  &.size- {
    &dynamic {
      --_li-height: auto;
      --_li__ic-padding: var(--_li-gap);
    }

    &compact {
      @include font('body2');
      --_li-height: var(--_li--cm-height);
    }

    &medium {
      --_li-height: var(--_li--md-height);
    }

    &large,
    &rectangle {
      --_li-height: var(--_li--lg-height);
    }
  }

  &.size-rectangle:not(.shape-basic):not(.shape-rounded):not(.shape-pill) {
    --_bt-squeeze: calc(var(--_li-padding) * -1);
  }
}

@mixin listItemShape() {
  @include optionShape;

  &.shape-basic,
  &.shape-rounded,
  &.shape-pill {
    --_li-margin: var(--_li--sh-margin);
    @content;
  }

  &.shape-pill:not(.size-rectangle) {
    --_bt-squeeze: calc(var(--_li-padding-y) - var(--_li-padding));
  }

  &.shape-pill:not(.size-rectangle) &__icon.li-thumbnail {
    --ic-radius: var(--radius-pill);
    --ic-size: calc(var(--_li-height) - (var(--_li-padding-y) * 2) - var(--_li-margin));
    --ic--md-size: var(--ic-size);
    --ic--lg-size: var(--ic-size);
  }

  &.shape-pill.size-rectangle {
    --_bt-squeeze: calc((var(--_li-height) - (var(--_li-padding-y) * 2)) / 2 - var(--_li-padding));
  }
}

@mixin listItemAdaptive() {
  @include mediaMaxList {
    @include mixinAdaptive;
    @content;
  }

  &.adaptive-icon {
    @include mixinAdaptive;
    @content;
  }

  &.adaptive-block {
    width: 100%;
  }
}

@mixin listItemNavigationRail() {
  $this: &;

  @include mediaMaxWidth(small) {
    &.navigation-rail-small,
    &.navigation-rail-medium,
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop {
      @include mixinNavigationRail($this);
    }
  }

  @include mediaMinMaxWidth(small, medium) {
    &.navigation-rail-medium,
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-medium,
    &.navigation-rail-medium-large,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop {
      @include mixinNavigationRail($this);
    }
  }

  @include mediaMinMaxWidth(medium, large) {
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-large,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-large,
    &.navigation-rail-large-extra,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail($this);
    }
  }

  @include mediaMinMaxWidth(large, extra) {
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-extra,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail($this);
    }
  }

  @include mediaMinMaxWidth(extra, desktop) {
    &.navigation-rail-desktop,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail($this);
    }
  }

  &.navigation-rail-always {
    @include mixinNavigationRail($this);
  }
}

@mixin listItemBackground() {
  &:not(.status-selected).value-background {
    --_li-background: var(--_li-background-color);
    --_li-background-opacity: var(--opacity-overlay);
  }
}

@mixin listItemBorder() {
  & + &:not(.shape-basic):not(.shape-rounded):not(.shape-pill).option-border &__text {
    @include afterAbsolute('top') {
      border-top-width: 1px;
      right: calc((var(--_li-padding) + var(--_li__trailing-width, 0px)) * -1);
      @content;
    }
  }
}

@mixin listItemStatus() {
  &:not(.status-disabled) {
    &:hover,
    &.status-hover {
      --basic-text: var(--_li-text-color);
      --_li-background-opacity: var(--_li--hv-background-opacity);
      background-image: varColor(--_li-image, --opacity-container-hover, true);
    }

    &:active,
    &.status-active {
      --basic-text: var(--_li-text-color);
      --_li-background-opacity: var(--_li--hv-background-opacity);
      background-image: varColor(--_li-image, --opacity-container-dragged, true);
    }

    &:focus,
    &.status-focus {
      --basic-text: var(--_li-text-color);
      --_li-background-opacity: var(--_li--hv-background-opacity);
      background-image: varColor(--_li-image, --opacity-container-focus, true);
    }

    &.status-selected {
      --basic-text: var(--_li--sl-text);
      --_li-palette-type1: var(--_li-palette-select);
      --_li-image: var(--_li--sl-image);
      --_li-background-opacity: var(--_li--sl-background-opacity);
    }
  }
}

@mixin listItemDisabled() {
  &.status-disabled {
    --basic-text: var(--disabled-type1);
    --basic-text-opacity: var(--opacity-surface-disabled);
    --_li-palette-type1: var(--disabled-type1);
    @content;
  }
}

@mixin listItemInit() {
  @include listItem;
  @include listItemIcon;
  @include listItemText;
  @include listItemTextShort;
  @include listItemUnderline;
  @include listItemSubText;
  @include listItemDescription;

  @include listItemColor;
  @include listItemContained;
  @include listItemContainedStatus;

  @include listItemSize;
  @include listItemShape;
  @include listItemAdaptive;
  @include listItemNavigationRail;
  @include listItemBackground;
  @include listItemBorder;

  @include listItemStatus;
  @include listItemDisabled;
}
