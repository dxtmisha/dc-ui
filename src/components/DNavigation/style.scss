@import "../../styles/color";
@import "../../styles/dimension";
@import "../../styles/elevation";
@import "../../styles/font";
@import "../../styles/media";
@import "../../styles/position";
@import "../../styles/options/optionBlur";
@import "../../styles/options/optionShape";
@import "styleExtend";

@mixin navigation {
  --_nv-palette: var(--nv-palette, var(--palette-type1, var(--background-colorless)));

  --_nv-background: var(--nv-background, var(--background-type8));
  --_nv--ds-background: var(--nv--ds-background, var(--background-type4));

  --_nv-shadow: var(--nv-shadow, var(--shadow-type8));
  --_nv--ds-shadow: var(--nv--ds-shadow, var(--shadow-type4));

  --_nv-height: var(--nv-height, 100%);
  --_nv-width: var(--nv-width, #{dimension(64)});

  --_nv--sh-padding: var(--nv--sh-padding, #{dimension(2)});

  --_nv__tt-height: var(--nv__tt-height, #{dimension(14)});
  --_nv__tt-padding: var(--nv__tt-padding, #{dimension(2) dimension(4)});
  --_nv__it-top: var(--nv__it-top, #{dimension(1)});

  --_nv-background-color: transparent;
  --_nv-background-opacity: var(--opacity-scrim);
  --_nv-transform: translateX(#{calc(var(--_nv-width) * var(--_nv-transform-directions))});
  --_nv-transform-directions: -1;

  --_nv__body-max: #{dimension(14)};
  --_nv__body-width: var(--_nv-width);
  --_nv__content-width: auto;

  @include fixedFull();
  @include index(8);
  content: "--MOBILE--";
  background-color: var(--_nv-background-color);
  display: flex;
  height: var(--_nv-height);
  overflow: hidden;
  transition-duration: var(--transition-medium-collapsing);
  transition-property: background-color, width, visibility;
  visibility: hidden;
  will-change: background-color, width, visibility;
}

@mixin navigationBody {
  &__body {
    background: var(--_nv-background-image, var(--_nv-background)) no-repeat;
    background-size: cover;
    box-shadow: var(--_nv-shadow);
    height: 100%;
    max-width: calc(100% - var(--_nv__body-max));
    overflow-x: hidden;
    overflow-y: auto;
    transform: var(--_nv-transform);
    transition-duration: inherit;
    transition-property: box-shadow, transform;
    transition-timing-function: var(--transition-cubic-80-40);
    width: var(--_nv__body-width);
  }
}

@mixin navigationTitle {
  &__title {
    @include font('headline6');
    align-items: center;
    display: none;
    justify-content: space-between;
    height: var(--_nv__tt-height);
    padding: var(--_nv__tt-padding);
    @content;
  }
}

@mixin navigationItem {
  &__item {
    &::before {
      content: " ";
      display: block;
      height: var(--_nv__it-top);
    }

    @content;
  }
}

@mixin navigationContent() {
  &__content {
    width: var(--_nv__content-width);
    @content;
  }
}

@mixin navigationTranslucency() {
  &.appearance-translucency {
    --_nv-background-opacity: var(--opacity-overlay);
    @content;
  }

  &.appearance-translucency &__body {
    background: transparent;
    @include optionBlur(var(--blur-type3)) {
      background: varColor(--_nv-palette);
    }
  }
}

@mixin navigationShape() {
  &.shape-basic &__body {
    border-radius: var(--basic-radius);
  }

  &.shape-rounded &__body {
    border-radius: var(--radius-type4);
  }

  &.shape-tile &__body {
    border-radius: var(--radius-tile);
  }

  &.shape-basic,
  &.shape-rounded {
    padding: var(--_nv--sh-padding);
  }
}

@mixin navigationAdaptive() {
  $this: &;

  &.status-move &__body {
    position: absolute;
  }

  @include mediaMinList {
    --_nv-background: var(--_nv--ds-background);
    --_nv-shadow: var(--_nv--ds-shadow);
    --_nv__body-max: 0;

    @include index(4);
    background-color: transparent;
    content: none;
    display: block;
    inset: auto;
    position: relative;
    transition-delay: 100ms;
    width: 0;

    &.appearance-transparent {
      --_nv-background: transparent;
      --_nv-shadow: none;
      z-index: auto;
    }

    #{$this}__body {
      max-width: none;
    }

    #{$this}__title {
      display: var(--_nv__tt-display, flex);
    }

    &.status-desktop {
      --_nv-transform: none;
      transition-delay: 0s;
      transition-duration: var(--transition-medium-expanding);
      width: var(--_nv--ds-width, auto);
      visibility: visible;
    }

    &.status-desktop #{$this}__body {
      transition-timing-function: var(--transition-cubic-80-00);
    }
  }
}

@mixin navigationShow() {
  $this: &;

  @include mediaMaxList {
    @include mixinShow($this);
  }

  &.adaptive-fixed {
    @include mixinShow($this);
  }
}

@mixin navigationRail() {
  $this: &;

  @include mediaMaxWidth(small) {
    &.navigation-rail-small,
    &.navigation-rail-medium,
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop {
      @include mixinNavigationRail;
    }
  }

  @include mediaMinMaxWidth(small, medium) {
    &.navigation-rail-medium,
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-medium,
    &.navigation-rail-medium-large,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop {
      @include mixinNavigationRail;
    }
  }

  @include mediaMinMaxWidth(medium, large) {
    &.navigation-rail-large,
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-large,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-large,
    &.navigation-rail-large-extra,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail;
    }
  }

  @include mediaMinMaxWidth(large, extra) {
    &.navigation-rail-extra,
    &.navigation-rail-desktop,
    &.navigation-rail-medium-extra,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-extra,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail;
    }
  }

  @include mediaMinMaxWidth(extra, desktop) {
    &.navigation-rail-desktop,
    &.navigation-rail-medium-desktop,
    &.navigation-rail-large-desktop {
      @include mixinNavigationRail;
    }
  }

  &.navigation-rail-always {
    @include mixinNavigationRail;
  }
}

@mixin navigationRight {
  &:not(.option-right) {
    padding-right: var(--_nv--sh-padding);
  }

  &.option-right {
    --_nv-transform-directions: 1;
    justify-content: flex-end;
    padding-left: var(--_nv--sh-padding);
  }
}

@mixin navigationInit {
  @include navigation;
  @include navigationBody;
  @include navigationTitle;
  @include navigationItem;
  @include navigationContent;

  @include navigationTranslucency;
  @include navigationShape;
  @include navigationAdaptive;
  @include navigationShow;
  @include navigationRail;
  @include navigationRight;
}
