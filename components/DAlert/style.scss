@import "../../src/styles/color";
@import "../../src/styles/dimension";
@import "../../src/styles/flex";
@import "../../src/styles/font";
@import "../../src/styles/position";
@import "../../src/styles/options/optionShape";

%background-high {
  --basic-text: var(--text-type2);
  --basic-text-opacity: var(--opacity-primary-high);
  --bt-palette-type1: var(--background-colorless);
  --_al-background-opacity: var(--opacity-primary-high);
  --_al-border: var(--background-colorless);
  --_al-border-opacity: var(--opacity-scrim);
}

%box-shadow {
  box-shadow: var(--_al-shadow);
}

%min-height {
  min-height: var(--_al-height);
}

@mixin alert {
  @include alertVar;

  --basic-text: var(--_al-palette);
  --ic-palette: var(--_al-palette);
  --bt-palette-type1: var(--_al-palette);

  --_al-background: var(--_al-palette);
  --_al-background-opacity: var(--opacity-overlay);
  --_al-border: var(--_al-palette);
  --_al-border-opacity: var(--opacity-primary-high);

  align-items: flex-start;
  background-color: varColor(--_al-background, --_al-background-opacity);
  border-radius: var(--_al-radius);
  display: flex;
  gap: var(--_al-gap);
  padding: var(--_al-padding);
  overflow: hidden;
  transition-property: opacity, transform, visibility;
}

@mixin alertVar {
  --_al-palette: var(--al-palette, var(--palette-type2, var(--primary-type2)));

  --_al-gap: var(--al-gap, #{dimension(4)});
  --_al-height: var(--al-height, #{dimension(8)});
  --_al-radius: var(--al-radius, var(--basic-radius));
  --_al-shadow: var(--al-shadow, var(--shadow-type2));

  --_al-padding: var(--al-padding, #{dimension(3) dimension(4)});
  --_al--dn-padding: var(--al--dn-padding, #{dimension(1) dimension(4)});

  --_al-border-width: var(--al-border-width, #{dimension(2)});
  --_al--dn-border-width: var(--al--dn-border-width, #{dimension(.5)});

}

@mixin alertIcon {
  &__icon {
    @include flexCenter;
    @extend %min-height;
  }
}

@mixin alertContent {
  &__content {
    @include flexX;
    @include flexDynamic;
    @extend %min-height;
    align-self: center;
    flex-wrap: wrap;
    @content;
  }

  &__text {
    @include font('headline6');
    flex-basis: 100%;
  }

  &__text + &__description {
    padding-top: dimension(1);
  }
}

@mixin alertShape() {
  @include optionShape;
}

@mixin alertBorder() {
  @include afterAbsolute {
    border-color: varColor(--_al-border, --_al-border-opacity);
  }

  &.border-top::after {
    border-top-width: var(--_al-border-width);
    bottom: auto;
  }

  &.border-right::after {
    border-right-width: var(--_al-border-width);
    left: auto;
  }

  &.border-bottom::after {
    border-bottom-width: var(--_al-border-width);
    top: auto;
  }

  &.border-left::after {
    border-left-width: var(--_al-border-width);
    right: auto;
  }
}

@mixin alertDense {
  &.option-dense {
    --_al-padding: var(--_al--dn-padding);
    --_al-border-width: var(--_al--dn-border-width);
    @content;
  }
}

@mixin alertShow {
  @keyframes __animate-alert--animation {
    0% {
      opacity: 0;
      transform: scale(.92);
    }

    20% {
      transform: scale(.92);
    }

    60% {
      opacity: 1;
    }

    100% {
      opacity: 1;
      transform: none;
    }
  }

  &.option-show {
    animation-duration: var(--transition-menu-expanding);
    animation-name: __animate-alert--animation;
  }
}

@mixin alertHide {
  &.status-hide {
    opacity: 0;
    transform: scale(.96);
    visibility: hidden;
    @content;
  }
}

@mixin alertOutlined {
  &.appearance-outlined,
  &.appearance-outlined-prominent {
    border-color: varColor(--_al-border, --_al-border-opacity);
    border-width: var(--basic-border-width);
  }

  &.appearance-outlined {
    background-color: transparent;
  }
}

@mixin alertFilled {
  &.appearance-filled {
    @extend %background-high;
  }
}

@mixin alertContained {
  &.appearance-contained {
    @extend %background-high;
    @extend %box-shadow;
  }
}

@mixin alertShadow {
  &.appearance-shadow {
    @extend %box-shadow;
    background: var(--background-type2);
  }

  &.appearance-shadow &__content {
    --basic-text: var(--text-type1);
  }
}

@mixin alertInit {
  @include alert;
  @include alertIcon;
  @include alertContent;

  @include alertShape;
  @include alertBorder;
  @include alertDense;
  @include alertShow;

  @include alertHide;

  @include alertOutlined;
  @include alertFilled;
  @include alertContained;
  @include alertShadow;
}
