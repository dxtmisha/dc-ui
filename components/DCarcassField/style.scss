@import "../../styles/color";
@import "../../styles/flex";
@import "../../styles/font";
@import "../../styles/padding";
@import "../../styles/position";
@import "styleExtend";
@import "styleVar";

@mixin carcassField() {
  @include carcassFieldVar;

  --_cf-background: #{varColor(--_cf-palette-type1, --opacity-overlay)};

  --_cf-half: calc(var(--_cf-height) / 2);
  --_cf__tx-half: calc(var(--_cf__tx-height) / 2);
  --_cf-shift: 0px;

  --_cf__tx-opacity: 1;
  --_cf__tx-medium: var(--opacity-surface-medium);
  --_cf__tx-scale: 1;
  --_cf__tx-translate-x: var(--_cf__ld-padding);
  --_cf__tx-translate-y: calc(var(--_cf-height) / 4);

  --_cf__ld-padding: 0px;
  --_cf__cn-padding: 0px;
  --_cf__tr-padding: 0px;

  --_cf__pr-opacity: 0;
  --_cf__pr-width: 0px;
  --_cf__sf-width: 0px;

  width: var(--_cf-width);

  &.adaptive-block {
    width: 100%;
  }
}

@mixin carcassFieldBody() {
  &__body {
    @include font('subtitle1');
    border-radius: var(--basic-radius);
    display: flex;
    flex-wrap: wrap;
    max-width: 100%;
    position: relative;
  }
}

@mixin carcassFieldInput() {
  &__input {
    -moz-appearance: textfield;
    border-radius: inherit;
    min-height: var(--_cf-height);
    padding: {
      top: calc(var(--_cf-half) - var(--_cf__tx-half) + var(--_cf-shift));
      right: calc(var(--_cf-padding) + (var(--_cf-space) / 2) + var(--_cf__cn-padding) + var(--_cf__tr-padding) + var(--_cf__sf-width));
      bottom: calc(var(--_cf-half) - var(--_cf__tx-half) - var(--_cf-shift));
      left: calc(var(--_cf-padding) + var(--_cf-space) + var(--_cf__ld-padding) + var(--_cf__pr-width));
    }
    position: relative;
    width: 100%;
    z-index: 3;
    @content;

    &::placeholder {
      color: varColor(--basic-text, --opacity-surface-disabled);
    }

    &::-webkit-clear-button,
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button,
    &::-webkit-search-cancel-button {
      -webkit-appearance: none;
    }

    &:-webkit-autofill {
      transition: background-color 5000s ease-in-out 0s;
    }
  }

  &__hidden {
    display: none;
  }

  &.view-suffix &__input {
    text-align: right;
  }
}

@mixin carcassFieldLabel() {
  &__label {
    @include absoluteTop;
    @extend %text-medium-opacity;
    border-radius: inherit;
    display: flex;
    height: var(--_cf-half);
    z-index: 2;
    @content;

    &::before,
    &::after {
      @extend %border-top;
      content: " ";
      flex-basis: var(--_cf-padding);
      min-width: var(--_cf-padding);
    }

    &::before {
      border-top-left-radius: inherit;
    }

    &::after {
      border-top-right-radius: inherit;
      flex-grow: 1;
    }
  }
}

@mixin carcassFieldTitle() {
  &__title {
    @include paddingX(var(--_cf-space));
    @extend %flex-x;
    max-width: calc(100% - (var(--_cf-padding) * 2) - var(--_cf__ld-padding) - var(--_cf__cn-padding) - var(--_cf__tr-padding));
    @content;

    @include afterAbsolute('top') {
      @extend %border-top;
    }
  }
}

@mixin carcassFieldText() {
  &__text {
    @include ellipsis;
    line-height: 1;
    max-width: 100%;
    opacity: var(--_cf__tx-opacity);
    transform: translate(#{calc(var(--_cf__tx-translate-x))}, #{calc(var(--_cf__tx-translate-y) - var(--_cf-shift))}) scale(var(--_cf__tx-scale));
    transform-origin: left;
    transition-property: font-size, opacity, transform;
    transition-timing-function: var(--transition-cubic-80-40);
    @content;
  }
}

@mixin carcassFieldRequired() {
  &__required {
    --basic-text: var(--error-type1);

    &::after {
      content: '*';
    }
  }
}

@mixin carcassFieldScoreboard() {
  &__scoreboard {
    @include paddingX(var(--_cf-padding));
    @extend %flex-x;
    @extend %text-medium-opacity;
    height: 0;
    transform: translateY(#{calc(-1 * var(--_cf-half))});
    width: 100%;
    z-index: 2;
    @content;
  }

  &.view-icon-cancel &,
  &.option-arrow & {
    &__scoreboard {
      position: relative;
      z-index: 5;
    }
  }

  &__space {
    flex-grow: 1;
  }
}

@mixin carcassFieldBorder() {
  &__border {
    @include absoluteFull;
    @extend %border;
    border-right-width: var(--_cf-border-width);
    border-bottom-width: var(--_cf-border-width);
    border-left-width: var(--_cf-border-width);
    border-radius: inherit;
    @content;
  }
}

@mixin carcassFieldIcon() {
  &.view-icon {
    --_cf__ld-padding: calc(var(--_cf__ic-height) + var(--_cf-space));
  }

  &.view-icon-cancel {
    --_cf__cn-padding: calc(var(--_cf__ic-height) + var(--_cf-space));
  }

  &.view-icon-trailing {
    --_cf__tr-padding: calc(var(--_cf__ic-height) + var(--_cf-space));
  }

  .cf-cancel {
    @extend %text-medium-opacity;
    cursor: default;
    opacity: 0;
    visibility: hidden;
    transition-duration: var(--transition-basic);
    transition-property: opacity, transform, visibility;

    &:hover {
      --basic-text-opacity: var(--opacity-surface-high);
    }
  }

  .cf-trailing {
    margin-left: var(--_cf-space);
  }

  .cf-arrow {
    cursor: pointer;
  }

  &.option-cancel-always .cf-cancel {
    opacity: 1;
    visibility: visible;
  }
}

@mixin carcassFieldPrefix() {
  &__prefix,
  &__suffix {
    @extend %text-medium-opacity;
    opacity: var(--_cf__pr-opacity);
    transform: translateY(var(--_cf-shift));
    transition-property: opacity;
    @content;
  }

  &__prefix {
    padding-left: var(--_cf-space);
  }

  &__suffix {
    padding-right: var(--_cf-space);
  }

  &.view-icon &__prefix {
    padding-left: calc(var(--_cf-space) * 2);
  }

  &.view-icon-trailing &__suffix {
    padding-right: var(--_cf-space);
  }
}

@mixin carcassFieldSize() {
  &.size-dense {
    --_cf-height: var(--_cf--dn-height);
  }

  &.size-small {
    --_cf-height: var(--_cf--sm-height);
  }

  &.size-large {
    --_cf-height: var(--_cf--lg-height);
  }

  &.size-interactive-display {
    --_cf-height: var(--_cf--ds-height);
  }

  &.size-interactive-display & {
    &__input {
      @include paddingY(0);
      font-size: var(--_cf--ds-font);
    }

    &__text {
      display: none;
    }

    &__message {
      @include paddingX(0);
    }
  }
}

@mixin carcassFieldShape() {
  &.shape-basic &__body {
    border-radius: var(--basic-radius);
  }

  &.shape-rounded &__body {
    border-radius: var(--radius-type5);
  }

  &.shape-pill &__body {
    --_cf-padding: calc((var(--_cf-height) / 2) - var(--_cf__ic--pill, 0px));
    border-radius: calc(var(--_cf-height) / 2);
  }

  &.shape-tile &__body {
    border-radius: var(--radius-tile);
  }
}

@mixin carcassFieldAlign() {
  &.align-center,
  &.option-arrow:not(.align-left):not(.align-right) {
    --_cf__tx-translate-x: 0px;
  }

  &.align-center &,
  &.option-arrow:not(.align-left):not(.align-right) & {
    &__label::before {
      flex-grow: 1;
    }

    &__text {
      transform-origin: center;
    }

    &__input {
      text-align: center;
    }
  }

  &.align-left,
  &.align-right {
    --_cf__ic-quantity: 0;

    &.view-icon,
    &.view-icon-trailing {
      --_cf__ic-quantity: 1;
    }

    &.view-icon.view-icon-trailing {
      --_cf__ic-quantity: 2;
    }
  }

  &.align-left {
    --_cf__tr-padding: 0px;
    --_cf__ld-padding: calc((var(--_cf__ic-height) + var(--_cf-space)) * var(--_cf__ic-quantity));
  }

  &.align-left & {
    &__space,
    &__icon.cf-cancel {
      order: 2;
    }
  }

  &.align-right {
    --_cf__tr-padding: calc((var(--_cf__ic-height) + var(--_cf-space)) * var(--_cf__ic-quantity));
    --_cf__ld-padding: 0px;
  }

  &.align-right & {
    &__space,
    &__icon.cf-cancel {
      order: -1;
    }
  }
}

@mixin carcassFieldStatus() {
  $this: &;

  &:not(.status-disabled) {
    &:not(.status-readonly) {
      #{$this}__body:hover {
        --_cf-background-image: #{varColor(--_cf-palette-type1, --opacity-container-hover, true)};
        --_cf-border-opacity: var(--opacity-surface-medium);
      }

      &:focus-within,
      &.status-focus {
        @extend %status-focus-text;

        #{$this}__input {
          --_cf-background-image: #{varColor(--_cf-palette-type1, --opacity-container-focus, true)};
        }

        #{$this}__label,
        #{$this}__border {
          @extend %border-focus-opacity;
          @extend %border-focus-width;
          @extend %status-focus;
        }

        #{$this}__icon.cf-cancel {
          opacity: 1;
          visibility: visible;
        }
      }

      &.status-validation {
        #{$this}__label,
        #{$this}__border {
          @extend %border-focus-opacity;
          @extend %status-focus;
          --_cf-palette-type2: var(--error-type1);
        }
      }
    }

    &.status-selected {
      --_cf-palette-type1: var(--_cf-palette-type2);
      --_cf-border: var(--_cf-palette-type2);

      #{$this}__input {
        --basic-text: var(--_cf-palette-type2);
      }
    }
  }

  &__input:autofill ~ *,
  &__input:-webkit-autofill ~ * {
    @include status-focus-text;
  }

  &__input:placeholder-shown ~ *,
  &.status-active {
    @include status-focus-text;
  }
}

@mixin carcassFieldReadonly() {
  .status-readonly &__input {
    cursor: default;
  }
}

@mixin carcassFieldDisabled() {
  &__input:disabled {
    @extend %status-disabled;
  }

  &__input:disabled ~ *,
  &.status-disabled > * {
    @extend %status-disabled;
  }
}

@mixin carcassFieldArrow() {
  &.option-arrow {
    --rp-palette: var(--_cf-palette-type1);
    --_cf__ic--pill: calc(var(--_cf__ic-height) / 2);
    @content;
  }

  &.option-arrow:not(.size-dense) {
    --ic-size: var(--_cf__ic--ar-height);
    --_cf__ic-height: var(--_cf__ic--ar-height);
  }
}

@mixin carcassFieldBasic() {
  &.appearance-basic &__input {
    @extend %background;
  }

  &.appearance-basic:not(:focus-within):not(.status-focus) {
    --_cf-border-opacity: 0;
  }
}

@mixin carcassFieldClassic() {
  &__label--classic {
    @include font('subtitle2');
    @extend %text-medium-opacity;
  }

  &.appearance-classic &__text {
    visibility: hidden;
  }

  &.appearance-classic &__message {
    @include paddingX(0);
  }
}

@mixin carcassFieldFilled() {
  $this: &;

  &.appearance-filled {
    --_cf-border-width: 0;
    --_cf--fc-border-width: 0;
    @content;

    &.status-active #{$this}__label {
      @extend %filled-focus;
    }
  }

  &.appearance-filled & {
    &__body {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    &__input {
      @extend %background;
      @extend %filled-shift;

      &:autofill ~ #{$this}__label,
      &:-webkit-autofill ~ #{$this}__label,
      &:placeholder-shown ~ #{$this}__label {
        @include filled-focus;
      }
    }

    &__border {
      &::before,
      &::after {
        @include positionBottom();
        background-color: varColor(--_cf-border, --_cf-border-opacity);
        border-radius: 0;
        content: " ";
        position: absolute;
      }

      &::before {
        --_cf-border-opacity: var(--opacity-surface-medium);
        height: var(--_cf--fl-border-width);
      }

      &::after {
        height: var(--_cf--fl--fc-border-width);
        clip-path: inset(0 50%);
        transition-property: clip-path;
        z-index: 8;
      }
    }

    &__scoreboard {
      @extend %filled-shift;
    }
  }

  &.appearance-filled:not(.status-disabled):not(.status-readonly) {
    &:focus-within,
    &.status-focus {
      #{$this}__border::after {
        clip-path: inset(0 0);
      }

      #{$this}__label {
        @extend %filled-focus;
      }
    }
  }

  &.appearance-filled.status-disabled &__border::before {
    --_cf-border-opacity: var(--opacity-surface-disabled);
  }
}

@mixin carcassFieldOutlined() {
  $this: &;

  &.appearance-outlined.status-active #{$this}__label,
  &.appearance-outlined &__input:placeholder-shown ~ #{$this}__label {
    @include outlined-focus;

    #{$this}__title::after {
      border-top-color: transparent;
    }
  }

  &.appearance-outlined &__input:autofill ~ #{$this}__label,
  &.appearance-outlined &__input:-webkit-autofill ~ #{$this}__label {
    @include outlined-focus;

    #{$this}__title::after {
      border-top-color: transparent;
    }
  }

  &.appearance-outlined:not(.status-disabled):not(.status-readonly) {
    &:focus-within,
    &.status-focus {
      #{$this}__label {
        @include outlined-focus;
      }

      #{$this}__title::after {
        border-top-color: transparent;
      }
    }
  }
}

@mixin carcassFieldInit() {
  @include carcassField;
  @include carcassFieldBody;
  @include carcassFieldInput;
  @include carcassFieldLabel;
  @include carcassFieldTitle;
  @include carcassFieldText;
  @include carcassFieldRequired;
  @include carcassFieldScoreboard;
  @include carcassFieldBorder;
  @include carcassFieldIcon;
  @include carcassFieldPrefix;

  @include carcassFieldSize;
  @include carcassFieldShape;
  @include carcassFieldAlign;

  @include carcassFieldStatus;
  @include carcassFieldReadonly;
  @include carcassFieldDisabled;

  @include carcassFieldArrow;
  @include carcassFieldBasic;
  @include carcassFieldClassic;
  @include carcassFieldFilled;
  @include carcassFieldOutlined;
}
